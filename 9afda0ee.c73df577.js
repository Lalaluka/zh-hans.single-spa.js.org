(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{225:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(1),o=n(9),i=(n(0),n(310)),r={id:"layout-api",title:"Layout Engine API",sidebar_label:"API"},c=[{value:"constructRoutes",id:"constructroutes",children:[]},{value:"constructApplications",id:"constructapplications",children:[]},{value:"constructLayoutEngine",id:"constructlayoutengine",children:[]},{value:"matchRoute",id:"matchroute",children:[]}],l={rightToc:c},s="wrapper";function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)(s,Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The single-spa-layout library exposes several javascript functions as a public API."),Object(i.b)("h2",{id:"constructroutes"},"constructRoutes"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"constructRoutes")," API transforms your ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/layout-definition/"}),"Layout Definition"),' into an opaque "resolved routes" object. We call it "opaque" because the shape of the object is irrelevant, as you will only use it when calling other APIs within single-spa-layout.'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { constructRoutes } from 'single-spa-layout';\n\nconst htmlTemplate = document.querySelector('#single-spa-template')\nconst layoutData = {\n  props: {\n    authToken: \"78sf9d0fds89-0fysdiuf6sf8\",\n    loggedInUser: fetch('/api/user')\n  },\n  loaders: {\n    mainContent: `<img src=\"loading.gif\">`,\n    // A single-spa parcel config\n    topNav: singleSpaReact({...})\n  }\n};\n\nconst resolvedRoutes = constructRoutes(htmlTemplate, layoutData)\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"routesConfig")," (required): Routes config is a ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/layout-definition/#json-layouts"}),"JSON Layout Definition"),", an ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"}),"HTMLElement"),", or a ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/inikulin/parse5"}),"parse5 HTML element"),". If it is an HTMLElement, it must be a ",Object(i.b)("inlineCode",{parentName:"li"},"<single-spa-router>")," element or a ",Object(i.b)("inlineCode",{parentName:"li"},"<template>")," that contains a single-spa-router element."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"layoutData")," (optional): Layout data is an optionally provided object that defines ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/layout-definition/#props"}),"props")," and ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/layout-definition/#props"}),"loaders")," for ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/layout-definition/#html-layouts"}),"HTML Layouts"),". You can omit it if using a ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/layout-definition/#json-layout"}),"JSON Layout")," or if you do not need to define props or loaders in your HTML Layout. The layoutData object should have top level properties ",Object(i.b)("inlineCode",{parentName:"li"},"props")," and ",Object(i.b)("inlineCode",{parentName:"li"},"loaders")," that are each objects. Each of those objects' keys is the name of a prop or loader and its corresponding value.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Return value")),Object(i.b)("p",null,"An opaque ",Object(i.b)("inlineCode",{parentName:"p"},"resolvedRoutes")," object. It is opaque because you will only use the object when calling other single-spa-layout APIs and do not need to read or modify the resolvedRoutes."),Object(i.b)("h2",{id:"constructapplications"},"constructApplications"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"constructApplications")," API transforms your ",Object(i.b)("inlineCode",{parentName:"p"},"resolvedRoutes")," into ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration#registering-applications"}),"single-spa application registration objects"),". These application registration objects are then used to call ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api/#registerapplication"}),"singleSpa.registerApplication()"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { constructRoutes, constructApplications } from 'single-spa-layout';\nimport { registerApplication } from 'single-spa';\n\nconst resolvedRoutes = constructRoutes(...)\nconst applications = constructApplications({\n  routes: resolvedRoutes,\n  loadApp: (app) => System.import(app.name)\n})\napplications.forEach(registerApplication);\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"constructApplications")," accepts a single object as an argument, with the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"routes")," (required): The opaque ",Object(i.b)("inlineCode",{parentName:"li"},"resolvedRoutes")," object returned from ",Object(i.b)("inlineCode",{parentName:"li"},"constructRoutes"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"loadApp")," (required): A function that is given an application object and must return a ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/configuration/#loading-function-or-application"}),"loading function"),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Return value")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"constructApplications")," returns an array of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/#registering-applications"}),"single-spa registration objects"),"."),Object(i.b)("h2",{id:"constructlayoutengine"},"constructLayoutEngine"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"constructLayoutEngine")," API transforms your ",Object(i.b)("inlineCode",{parentName:"p"},"resolvedRoutes")," and ",Object(i.b)("inlineCode",{parentName:"p"},"applications")," into a ",Object(i.b)("inlineCode",{parentName:"p"},"layoutEngine")," object. The layout engine is responsible for creating, destroying, and rearranging dom elements during route transitions."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { constructRoutes, constructApplications, constructLayoutEngine } from 'single-spa-layout';\nimport { registerApplication, start } from 'single-spa';\n\nconst resolvedRoutes = constructRoutes(...);\nconst applications = constructApplications(...);\nconst layoutEngine = constructLayoutEngine({routes: resolvedRoutes, applications: applications});\n\nlayoutEngine.isActive(); // true\nlayoutEngine.deactivate();\nlayoutEngine.activate();\n\napplications.forEach(registerApplication);\nstart();\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"constructLayoutEngine")," accepts a single object as an argument, with the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"routes")," (required): The opaque ",Object(i.b)("inlineCode",{parentName:"li"},"resolvedRoutes")," object returned from ",Object(i.b)("inlineCode",{parentName:"li"},"constructRoutes"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"applications")," (required): The array of ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/configuration/#registering-applications"}),"application registration objects")," returned from ",Object(i.b)("inlineCode",{parentName:"li"},"constructApplications"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"active")," (optional): A boolean that indicates whether the layout engine should start out active or not. Defaults to true.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Return Value")),Object(i.b)("p",null,"A ",Object(i.b)("inlineCode",{parentName:"p"},"layoutEngine")," object, with the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"isActive"),": a function that accepts no arguments and returns a boolean indicating whether the layout engine is active or not. When active, the layout engine will change the DOM during route transitions.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"activate"),": a function that accepts no arguments and returns ",Object(i.b)("inlineCode",{parentName:"p"},"undefined"),". Calling this function activates the layout engine, which includes setting up routing event listeners so that the layout engine can change the DOM during route transitions.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"deactivate"),": a function that accepts no arguments and returns ",Object(i.b)("inlineCode",{parentName:"p"},"undefined"),". Calling this function deactivates the layout engine, which includes tearing down all routing event listeners so that the layout engine no longer changes the DOM during route transitions."))),Object(i.b)("h2",{id:"matchroute"},"matchRoute"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"matchRoute")," API primarily exists for server rendering. It returns a filtered ",Object(i.b)("inlineCode",{parentName:"p"},"resolvedRoutes")," object that contains only the routes that match a particular string path."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { constructRoutes, matchRoute } from \'single-spa-layout\';\n\nconst resolvedRoutes = constructRoutes(...);\n\nconst settingsRoutes = matchRoute(resolvedRoutes, "/settings")\nconst dashboardRoutes = matchRoute(resolvedRoutes, "/dashboard")\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"routes")," (required): The opaque ",Object(i.b)("inlineCode",{parentName:"li"},"resolvedRoutes")," object returned from ",Object(i.b)("inlineCode",{parentName:"li"},"constructRoutes"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"path")," (required): A string path representing the URL fragment to match the routes with. Note that the path is not a full URL - it only is the pathname part of a browser's URL. In server rendering contexts, this is often available as ",Object(i.b)("inlineCode",{parentName:"li"},"req.url"),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Return Value")),Object(i.b)("p",null,"An opaque ",Object(i.b)("inlineCode",{parentName:"p"},"resolvedRoutes")," object. It is opaque because you will only use the object when calling other single-spa-layout APIs and do not need to read or modify the resolvedRoutes."))}p.isMDXComponent=!0},310:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return u}));var a=n(0),o=n.n(a),i=o.a.createContext({}),r=function(e){var t=o.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},c=function(e){var t=r(e.components);return o.a.createElement(i.Provider,{value:t},e.children)};var l="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},p=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),p=r(n),u=a,b=p[c+"."+u]||p[u]||s[u]||i;return n?o.a.createElement(b,Object.assign({},{ref:t},l,{components:n})):o.a.createElement(b,Object.assign({},{ref:t},l))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[l]="string"==typeof e?e:a,r[1]=c;for(var u=2;u<i;u++)r[u]=n[u];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);